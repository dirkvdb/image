CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

#ENABLE_TESTING()

FIND_PACKAGE(JPEG)
IF (JPEG_FOUND)
    OPTION(HAVE_JPEG "Jpeg support" ON)
ENDIF (JPEG_FOUND)

FIND_PACKAGE(PNG)
IF (PNG_FOUND)
    OPTION(HAVE_PNG "Png support" ON)
ENDIF (PNG_FOUND)

SET (IMAGE_INCLUDE_DIRS
    "${CMAKE_CURRENT_SOURCE_DIR}/inc/"
    "${CMAKE_CURRENT_SOURCE_DIR}/../utils/inc/"
    ${JPEG_INCLUDE_DIR}
    ${PNG_INCLUDE_DIRS}
)
SET (IMAGE_LIBRARY_DIRS
    "${CMAKE_CURRENT_BINARY_DIR}"
    ${JPEG_LIBRARY_DIRS}
    ${PNG_LIBRARY_DIRS}
)
SET (IMAGE_LIBRARIES image
    ${JPEG_LIBRARIES}
    ${PNG_LIBRARIES}
)

SET (IMAGE_SRC_LIST
    inc/image/image.h
    inc/image/imagefactory.h src/imagefactory.cpp
    inc/image/imageloadstoreinterface.h
)

IF (HAVE_JPEG)
    LIST(APPEND IMAGE_SRC_LIST src/imageloadstorejpeg.h src/imageloadstorejpeg.cpp)
ENDIF (HAVE_JPEG)

IF (HAVE_PNG)
    LIST(APPEND IMAGE_SRC_LIST src/imageloadstorepng.h src/imageloadstorepng.cpp)
ENDIF (HAVE_PNG)

INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR} ${IMAGE_INCLUDE_DIRS})
LINK_DIRECTORIES(${IMAGE_LIBRARY_DIRS})

ADD_LIBRARY(image STATIC ${IMAGE_SRC_LIST})

ADD_DEFINITIONS("-std=c++11")
IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    SET(CMAKE_CXX_FLAGS "-stdlib=libc++")
ENDIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")

IF (UNIX OR APPLE)
    ADD_DEFINITIONS("-DCONSOLE_SUPPORTS_COLOR")
ENDIF (UNIX OR APPLE)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/imageconfig.h.in ${CMAKE_BINARY_DIR}/imageconfig.h)

#ADD_SUBDIRECTORY(test)
